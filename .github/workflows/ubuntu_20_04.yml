name: Ubuntu 20.04

on:
  pull_request:
    branches: [ main ]

jobs:
  hardware:
    name: Hardware
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - run: sudo apt-get update
      - run: sudo apt-get install kicad
      - run: python blocks/audio-in-daisy/build.py
      - run: python blocks/audio-out-daisy/build.py
      - run: python blocks/button/build.py
      - run: python blocks/cv-in/build.py
      - run: python blocks/gate-in/build.py
      - run: python blocks/gate-out/build.py
      - run: python blocks/led/build.py
      - run: python blocks/led-bi/build.py
      - run: python blocks/multiplexer/build.py
      - run: python blocks/pot/build.py
      - run: python blocks/power-bus/build.py
      - run: python blocks/regulator-daisy/build.py
      - run: python blocks/slider/build.py
      - run: python blocks/switch/build.py
      - run: python blocks/trim/build.py
      - run: python blocks/kits/stats.py
      - run: python blocks/kits/build.py
      - run: python boards/kivu12/build.py

  software:
    name: Software
    runs-on: ubuntu-20.04
    defaults:
      run:
        shell: bash -l {0} # Source profile for each step
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - run: python3 build-system/install.py
      - run: erbb setup
      - run: python blocks/test/configure.py
      - run: python blocks/test/build.py
      - run: python build-system/install.py
      - name: test/data
        run: erbb configure; erbb build; erbb build hardware
        working-directory: test/data
      - name: samples/bypass
        run: erbb configure; erbb build; erbb build hardware; erbb build simulator
        working-directory: samples/bypass
      - name: samples/drop
        run: erbb configure; erbb build; erbb build hardware; erbb build simulator
        working-directory: samples/drop
      - name: samples/reverb
        run: erbb configure; erbb build; erbb build hardware; erbb build simulator
        working-directory: samples/reverb
      - name: samples/kick
        run: erbb configure; erbb build; erbb build hardware; erbb build simulator
        working-directory: samples/kick
      - name: erbb init
        run: mkdir init; cd init; erbb init Init; erbb configure; erbb build; erbb build hardware; erbb build simulator
        working-directory: samples

  unit_tests:
    name: Unit Tests
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - run: sudo apt-get update
      - run: sudo apt-get install -y ninja-build
      - run: python test/unit/configure.py
      - run: python test/unit/build.py
      - run: python test/unit/run.py

  erbb_tests:
    name: Erbb/Erbui Tests
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - run: sudo apt-get update
      - run: sudo apt-get install -y ninja-build
      - run: sudo apt-get install libglu1-mesa-dev
      - run: sudo apt install libcairo2-dev libffi-dev python3-dev
      - run: sudo apt-get install kicad
      - run: sudo apt-get install libsndfile1
      - run: pip3 install -r requirements.txt
      - run: mkdir -p ~/.local/share/fonts/
      - run: cp include/erb/vcvrack/design/d-din/*.otf ~/.local/share/fonts
      - run: cp include/erb/vcvrack/design/indie-flower/*.ttf ~/.local/share/fonts
      - run: python build-system/test.py
      - run: python build-system/cover.py
      - run: python test/vcvrack/configure.py
      - run: python test/vcvrack/build.py
